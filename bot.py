import telebot
from telebot import types
import pyautogui
from psutil import cpu_percent, virtual_memory, disk_usage
from PIL import ImageGrab                                                              
from tempfile import gettempdir
from subprocess import run, Popen
import os
import time

#Token from botfather
TOKEN = 'Your Token'

bot = telebot.TeleBot(TOKEN)

#initializing buttons
@bot.message_handler(commands=['start'])
def handle_start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('üñ•–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ü–ö')
    item2 = types.KeyboardButton('üåå–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ')
    item3 = types.KeyboardButton('üî•–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –ü–ö')
    markup.add(item1 , item2, item3)
    bot.send_message(message.chat.id, 'üëã–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:', reply_markup=markup)
    bot.send_message(message.chat.id, 'üëã–î–ª—è –≤—ã–∑–æ–≤–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –Ω–∞–ø–∏—à–∏ /inst', reply_markup=markup)
####

#PC information
@bot.message_handler(func=lambda message: message.text == 'üñ•–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ü–ö')
def handle_system_info(message):
    info = get_system_info()
    bot.reply_to(message, info)

def get_system_info():
    cpu_usage = cpu_percent()
    ram_usage = virtual_memory().percent
    disk_usagee = disk_usage('/').percent
    system_info = f"–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ CPU: {cpu_usage}%\n"
    system_info += f"–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ RAM: {ram_usage}%\n"
    system_info += f"–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞: {disk_usagee}%"

    return system_info
####

#buttons for open app
@bot.message_handler(func=lambda message: message.text == 'üåå–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ')
def handle_open_app(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)         
    item1 = types.KeyboardButton('üî¥üéâ–û—Ç–∫—Ä—ã—Ç—å Chrome')
    item2 = types.KeyboardButton('üìàüß∂–û—Ç–∫—Ä—ã—Ç—å uTorrent')
    item3 = types.KeyboardButton('üìàüîµ–û—Ç–∫—Ä—ã—Ç—å Steam')
    item4 = types.KeyboardButton('‚¨ÖÔ∏è–ù–∞–∑–∞–¥')    
    markup.add(item1, item2, item3, item4)
    bot.send_message(message.chat.id, "üéÆ–í—ã–±–µ—Ä–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è:", reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == 'üî•–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –ü–ö')
def handle_pc_interaction(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)         
    item1 = types.KeyboardButton('üîÑ–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –ü–ö')
    item2 = types.KeyboardButton('üÖæÔ∏è–í—ã–∫–ª—é—á–∏—Ç—å –ü–ö')
    item4 = types.KeyboardButton('üí™–°–∫—Ä–∏–Ω—à–æ—Ç')
    item5 = types.KeyboardButton("üß∂–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å uTorrent")
    item6 = types.KeyboardButton("‚úàÔ∏è–°–º–µ–Ω–∏—Ç—å –æ–∫–Ω–æ")
    item3 = types.KeyboardButton('‚¨ÖÔ∏è–ù–∞–∑–∞–¥')      
    markup.add(item1, item2, item3, item4, item5, item6)
    bot.send_message(message.chat.id, 'üóø–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –ü–ö:', reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == '‚¨ÖÔ∏è–ù–∞–∑–∞–¥')
def handle_back(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('üñ•–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ü–ö')
    item2 = types.KeyboardButton('üåå–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ')
    item3 = types.KeyboardButton('üî•–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –ü–ö')
    markup.add(item1 , item2, item3)
    bot.send_message(message.chat.id, 'üóø–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:', reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == 'üî¥üéâ–û—Ç–∫—Ä—ã—Ç—å Chrome')
def handle_open_app(message):
    try:      
        app_name = message.text.split()[1]
        command = f"start {app_name}"
        Popen(command, shell=True)
        bot.reply_to(message, f"–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ {app_name} –∑–∞–ø—É—â–µ–Ω–æ.")
    except Exception as e:
        bot.reply_to(message.chat.id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
        
@bot.message_handler(func=lambda message: message.text == 'üìàüß∂–û—Ç–∫—Ä—ã—Ç—å uTorrent')
def handle_open_torent(message):
    try:
        app_patch1 = r"C:\Users\1\AppData\Roaming\uTorrent\updates\utorrent.exe"
        run([app_patch1])
        bot.reply_to(message, f"–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ uTorrent –∑–∞–ø—É—â–µ–Ω–æ.")
    except Exception as e:
        bot.reply_to(message.chat.id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")

@bot.message_handler(func=lambda message: message.text == 'üìàüîµ–û—Ç–∫—Ä—ã—Ç—å Steam')
def handle_open_steam(message):
    try:
        app_patch1 = r"C:\Program Files (x86)\Steam\steam.exe"
        run([app_patch1])
        bot.reply_to(message, f"–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Steam –∑–∞–ø—É—â–µ–Ω–æ.")
    except Exception as e:
        bot.reply_to(message.chat.id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")


@bot.message_handler(func=lambda message: message.text == 'üîÑ–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –ü–ö')
def handle_open_steam(message):
    try:
        os.system('shutdown /r')
        bot.reply_to(message, "–ü–ö –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω")
    except Exception as e:
        bot.reply_to(message, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã(: {str(e)}")

@bot.message_handler(func=lambda message: message.text == 'üÖæÔ∏è–í—ã–∫–ª—é—á–∏—Ç—å –ü–ö')
def handle_open_steam(message):
    try:
        bot.reply_to(message, f"–ß–µ—Ä–µ–∑ 10 —Å–µ–∫ –∫–æ–º–ø –≤—ã–∫–ª—é—á–∏—Ç—Å—è")
        time.sleep(10)
        os.system("shutdown -s")
        bot.reply_to(message, "–í—ã–∫–ª—é—á–µ–Ω–∏–µ...")
    except Exception as e:
        bot.reply_to(message, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã(: {str(e)}")

@bot.message_handler(func=lambda message: message.text == '‚úàÔ∏è–°–º–µ–Ω–∏—Ç—å –æ–∫–Ω–æ')
def handle_open_window(message):
    try:
        pyautogui.hotkey('alt', 'tab')
        bot.reply_to(message, "–û–∫–Ω–æ —Å–º–µ–Ω–µ–Ω–æ")
    except Exception as e:
        bot.reply_to(message.chat.id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")


@bot.message_handler(func=lambda message: message.text == 'üß∂–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å uTorrent', content_types=['text']) # —Å—á–∏—Ç—ã–≤–∞–µ–º
def handle_open_browserr(message):
    markup = telebot.types.InlineKeyboardMarkup()
    button_start_download = telebot.types.InlineKeyboardButton(text="–ù–∞—á–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É", callback_data="start_download") #–¥–æ–±–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
    button_pause_download = telebot.types.InlineKeyboardButton(text="–ü–∞—É–∑–∞", callback_data="pause_download") #–¥–æ–±–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
    markup.row(button_start_download, button_pause_download)
    bot.send_message(message.chat.id, "–ß—Ç–æ –¥–µ–ª–∞–µ–º?", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: True)
def callback_queryy(call):
    try:
        if call.data == "start_download":
            pyautogui.rightClick(847, 212)
            pyautogui.leftClick(906, 417)
            bot.answer_callback_query(call.id, text="–ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ—à–ª–∞")
        elif call.data == "pause_download":
            pyautogui.rightClick(847, 212)
            pyautogui.leftClick(906, 423)
            bot.answer_callback_query(call.id, text="–ü–∞—É–∑–∞")
    except Exception as e:
        bot.answer_callback_query(call.id, text=f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {str(e)}")

@bot.message_handler(func=lambda message: message.text == 'üí™–°–∫—Ä–∏–Ω—à–æ—Ç', content_types=['text'])
def echo_message(message):
    try:
        path = gettempdir() + 'screenshot.png'
        screenshot = ImageGrab.grab()
        screenshot.save(path, 'PNG')
        bot.send_photo(message.chat.id, open(path, 'rb'))
    except Exception as e:
        bot.send_message(message.chat.id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")

if __name__ == "__main__":
    bot.polling()

   